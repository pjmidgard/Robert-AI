<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMTEhUUEhMWFhUXDRgYFxgWGRUWGBUZFxcYFxgXGxMY
        HSggGBslHRgWITEhJSkrLi4uFx8zODMsNyotLiv/2wBDAQoKCg4NDhoQEBotJR8lLS0tLS0tLS0tLS0t
        LS0tLS0tLS0tLS0tLS0vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS//wAARCACoASwDASIAAhEBAxEB/8QA
        GwAAAgMBAQEAAAAAAAAAAAAAAAECAwQFBgf/xAA7EAABAwIEAwYEBQMEAgMAAAABAAIRAyEEEjFBBVFh
        EyJxgZGhBjKxwRQjQtHwUnLhFTNikhbxB0PC/8QAGgEBAQEBAQEBAAAAAAAAAAAAAAECAwQFBv/EACoR
        AQEAAQMDAgUFAQEAAAAAAAABEQIhMQNBUWHwEhMikaEycYHB0UIU/9oADAMBAAIRAxEAPwD5qhNdnhHw
        zWxFPtKcZc5bdtY3EbspuG/Nfp9WqaZmvj6dN1XEcVC08RwTqNR1J/zNiYDhqAdHAHQ7hZlZczKWY2CE
        0lUCE0kAtdTCNa1ji8HM2co1H8+xWZrZIA3Meq01WZ3DLoGROwAJiT4fdSrFbAHGGgn2HiR95XS7eGdl
        QGaQHOIaSQREgbxG91zwZ7jNP1Hn1PILXw7EGlUBaQJMPc7QAnSP4fBSrGirhyykx4eHPdtIkc99tD6L
        kGm4nQ5jtBk+HNdXjWOz1bNFmgd2CTcnUjS/JU4biJpuDgWk9WiBaIzNuSs6c4y1cMdWkQXSDOY7aX3V
        eSdSF0cVhqlapNs7oOWwtFiATYQN+XksWLoupuLHDKRqNdp13WpWbGpppFty7OGxcSHX9oVRw5IzAy0H
        aLHYESsYKsbf7j7q4TK3siCdfSZ9Crhh2lhjNnzTGWBl5zeLwseWNbfX0Q2qR8pIkQeZ80F9amWRMCWy
        IgrM58pJKmTU2v5qCSI0UmESROWLkTa415c/Jb8Y+iQwUwZyXzSSDpAm3O3hC5tKqQHAGAWweolSeJaD
        /wAr+n+PdZs3al2S7MzobgwRebH+aqzHUWtdDXB7SJkWgnYc08DjnUnZhEkb3seY5/zoralBzqZqgjKH
        EO8yDYDq73U7qwOouAmDHODHrsq1q/FOyFmY5CbjW/jrsFmIWozSQhNVCQhNAkJpIBCaSAW3CcUqU25W
        ClEz36OHqG//ACqUyfKVjSUsl5WWzhbia5e4udlk65WsYLCLMYA0abBVJpKoEJpIBCaEF+FZJJ5D3Nh9
        1v4hXY8MysygMh0aOI0gcrG+9uSuLGtwzJYW1M0zGovck9OehWGpSOUOcDlki25gGJN/5qsc1viEyq0N
        ILTcd2Dp1Manp0VIAkA6TpN+vh5qt9YnoOQQbCNzr0HJawmXR4tjKJI7Fn6RJMiYtETpELn9sdgB5D7q
        pNJpxMJbldTxb2uDg8gjQz9lDEVnPcXPMuOpKrTTEMkp0apaQ5pgjQ+yikqhpJpIBCauw+Ee+cjC7KJM
        bJRQpMEkTpN/BJomwE+Csa24G86boHUYBOUyJsf8LZw+tSYyoKjC5xaC2P0nQeBkzusoxBaC1p1N/LS/
        Pqnh6oJ78xF4N9Qd1mzLUV2PPx1/ZWAGmY7wPIjXylRcPIbTckbfyyKladZ0F5k6c+XRUa8VhqYpte14
        zOdBZYx4jW1vULE9lp/kJOFh/cfoFpw9N1PJUc2WlxgHR0ayOSk2GJCtxRBeSAACZAGg6KtaZJCE0CQm
        kgEJpIBCaSAQmkgEJpIBbOEVQ2sxzjADpJ12KyKym2xPl+/nt5qVY6fFKxrVJBlpEN87gAHQmPcLPxUt
        zBjLNaLCTc7m/Mj6K3Cg5vIBviAJPpbz6LPj2t7SGzAaLnwuVJtstZWDc+XUqJKvdlIOaQY7oEe/85qh
        aQkITRCQtWAYwk9oCW5f06zt7T6Lp18JSgQ+nTIpA8y7rOx8FLcLI5BwzgASIDhIJsCtOTD5h3nluS9v
        1fsqqtcOZBL3OB7pJsByif5ZZUF9GkZzZS5oN4mI6nZXMq0hnlnzDu3+TXffb0V1ZtWnSaQQG1Kd8u8f
        1WsYI0XO7Q8ypyvDq4XhPeb2oLWubI7wvaU8LWq4YvaIGZkiYPRpHVZ6T3Pa57qoljbNdq4dFdw3EU3G
        K9mgggibGDAtoLaLN43WM1DES5skt7wuCbXuRM6cvdbuK0abX/lHMMpzQGug8pi3osVHAuLyKcPiSNAb
        aWMbwlhMwcAe6CC2Xd22hE7jp9FbN9jKkVLwG365fs0LocN4p2OY5GukAWtztN5Gs+AWbEUCBIHdImba
        den8vqaMRTLYaY52Mi+l/CPVWyXYzYjUE316/UeKg77D6IY+PBW4imBlIMgtnw6eIVZSwtfJfKHXIIIk
        Xj3V7aDjTcRcNcNb/NE9eSxD5T/cPoVdhH/pOkEeR19NfXmixCqw/f11/niqVsoYh9MuIMHJl5idNPI+
        iyJEpIQmqhITSQCE0kDSQhA0kIQNJCEDhdSi01TToxMCxGov3r8rey51EXnl9dve/kurTpCk6CZeGiYm
        1pDZ9T7LNajRxHC5HkCWtAsT7adcx81m412Qy9k4uJb3teQym/nYK2pj8zXMeSQXCD/TF/SFyqrTeevp
        r+6km62qTp5pJu+yitsBBUmNJMAEnkLn0V2Fc0ZszZ7hjaDsUV067cPSOQOc78ucwg947ewXFKS9h/8A
        HHw3UxtWq1jmMa2iMzntL4zGwDQROhm4XPVqnT03Va1JdVxHBwXBMRUpOrtoVX0GHvvaLAC7oPQanbdf
        RPj/AA3D62GwlPh1BjsRWIdRFBgDzSAcH9pAn5gR3rgtcdnKeC+I6vDMJiuHOY19ahVbTouHyvGKzPBc
        DuMxMbyBaJNtTgNTgpwWLzNqhlP8NiG6R2tR9QupneC4jrlHMx49fUurVL6/Tvzt3/H3w9OnRJps+/ox
        /AP4HCU8TR4rTbTrh9212ZppFggMEGb5z3dZGq42A4bg6dZmKrYLGN4e6t3Hvc1zIJ7pewMzGnp+oza7
        tD7CvhMTxirXqU6lGjSw+IdRoh9GlWc57Luc4vaS0GRYWE6GCTjx/wAV18dhafDuzY3E1sW/DVXf/W0U
        MjnvaBzBFtspjZZmq5t739W/G3vy18Mx+3G3Lj/H2Dw2MxFJnCKAqObRca34dmVkS3JMANkd6/UDoPFV
        eGVG0wXQ09sWFru65rhaCDoQQbL6dwTCP4Diwyq5tajiqDzma0se12Ha5/ykm3fjW+abRB5OL+DcRxHD
        1eKGpTY6pnqiiAT3G2jtJs7KzlfeJt06fWmjEz9Pa+eXPX0/i3xv3jyGO4fUoQ5zhc6tcRcDmY66KniZ
        kMh7nUwIacuh3F4O3sseIxL6kZnOdFmgkmByHsrsLkgio82aS0DvAO8NCfbqvXJZy4ZyMNX7NzX5Zg2B
        Oo9LC6fFMf21TPly90CJnTeY1/YKrFBkDI5ziRLp2O6zKyTOUtvBkLRQaCHAmO6CBGpjTpPNUBTrObPd
        BiBqRPsqiwYZxYXAEtDhLoMDXXlqPUKlrdwd9Vvp8SIYabflc2Xgxd1s0HYEBYarNwZHP7dFJnutbeJ0
        xkpvDgc7ZcBs4AT9T6rnqxh7p6H6/wDoKtwhWJSTSQqhpIQgaSEIGkhCBpIQgaSF0eHYId2pV/2pPmRJ
        iNYsfRS3CyCvhDRDc8SRmAF+gnw//XROroeeX9gPoT5q3F4qk4T2d3OBBLjGUQMsDQTIhRxpBJdlLcxF
        hoA0a9RcLMz3aUYgw0nmbebR9kuHNLnNadCRY79J28VZxDKMgbeKYmbQYANvJZGvuOl/GLrTKFaMxjTM
        Y335qKlWFyotbJgakqo6Pw/Tca7cu0kzpEKDmB5rO+WGzABd+objRbOAsNM1HuJAY0hzRcn/ABqsGHry
        4guLGuBkCSNyBCx3rXZjXuPhPGPp47CjAyXObFRgmHNcATmHgJn/AIheNFIZS7MJBs2DJ6yvoXwl8V4T
        h9Yvc19TtKAY4sguZliO6SAJ3AOwXPr5+GyTPo30v1b3Ds/C/DMHX4Xia3EKh7WrULsVUcfzKTmOd2UN
        2MEQ2LlxbBjKOb8M4unisVh6WOxuJqUmuDsMyvSFGnXcLMJqB7s5/u1JibwZ4rg+I4jRxuOo08lKriKd
        SlRcf90UAW1CQLXiYm5zdCdfFfienxk4bB4ag9jxiG1XvfkAotpg5iwtJnUXgbCJNvHvv+ePp29zbw9O
        ePed0+OY2rhsbjqfDXEt/wBOdVrNZ3hSruqDM4WMODSXR1I2AGbi2G4fT4NRq0K4GJY5tWm9rvzjiHln
        agtmZ7sEbZByv1OEcSdwirjKWIwtap22LfXpVaLM4rB+lMnZw5c3O6E8j/T8RhHjitfhuGFPtQ99Npqd
        tRa42f2bnZA8SDpY7NvE09v4xcz6tuFvv0dPgFZtfilV3FHBtWlgqPYUqhDGDtaP55aDAcZJ/wCx/pGX
        xHG+JVqH4jDYKvVOA7YtbEmnlddw7WPlLiRY94Deb+6+JK3+rYptHCYahVbQp06lStXL22qgPbTaWGYI
        5ggkHSJOXivx/QoYavgKmDcys2m+lkAZ2JLmkZic5MXnebXva9O3MxpzcT6dtvX35TXjHP8APl8keQPl
        0O+/h0VSsoAEw4wDvrHWFp/DtZUAqZskiSQQSI2brqvpcPErOEcIkABzMwJIuBdUK7Flp+WS0OIbOuXU
        fUrOkKZQkhVEqZgjlv4bqyj82UkAF0GdBtKpVjmyR1j3sfeVFdapwU53tpva8CmCbgQToIk8lnw2GBY5
        uRznkjIRoNzfy91kbUI0MZiZjkbfX6KbXlt2mDEiOpH2WcVrZRUplpIcIIMEKKb3kkkmSTcndRW2DSQh
        A0kIQNJCEDSQhA1roElkSYDnQJtJaB+/qsa2YUdx3932v7FSrFTzNuQELXTNR+RjQXAEkNiYvr91zwb+
        J+q64fUoHO2LOLSbEGQ029PVSrGTHVGmMoIOWHTuQTbpCytbBP8AafpH3UqxJJJMnMSTzM3+qlQqZQ6w
        MiL7dRyKqCtTiJI+UG19RF+RVbSnSAJgmATcnQTuo1NYFwDrz6oOjwys8sqsDgG9g4wYv4eU+qw4ekXP
        DRqTvYeq2cGZD2ucBlLi2XfKZBBEmyyPy5nAkCCcsCQb2HgpOavY2NbnDXkhuaHEagfz6q2vQa+sW0nS
        HPtmka+XMrO5/dgtvmnNvHJQKqPV4f4ux2CoOwbXtFM5gDllzA+7gx9o1JuDBK4/w9xethawr4dwD2MP
        zQQ5psWkbjTrYclzXVCYBJMaeajsszp6cXbnn1a+O7b8Prnwlw9/Gm1sTjMXVY5lTs2U6DhTbSGUOz5T
        OpJ/6m5tGGnxKvi3t4ZW4ph3UO1DHVWir2tZrT3Wdo5mQuMATmud36H5myoRMEiWwYJEjkY1HRQXD/zb
        3fbttNnT5202/f1fa+Mj/SuJU3YTvNxOEeKlA3j8NR/KcNxp7P52+VYp9bEOqYyo4Fxq5nk271tG/wBI
        ltuS9P8A/FfxFhcNXrVMa45nUminVcHVMsTnbYFwJBbeP0kW3818T46hVxNZ2GYadF1UlrdAb/Nk/TJk
        gbAgLPR0XTrumztPq8+/6a6mqatMv4c59aXZtSXTOnoEYvFPqOzPMmI2FvLxKi+iW5S7RwkRFwm2iXOh
        gJk2G/mvW87XhHzQqt7g7zXAn5jGoB9P+x5rnrVXwz2U2lzSJeY8oEeyyJChNJCqBaMMwuIA1kj2ke8r
        Oujw3GU2MeHNJefkcP0n1te9lLwsVUaANQCocgzXGrgBsQNNIW3jVZrmtDGANaCAdyLEX9fRc2mO9J3c
        Pc3WloL2uAElom19Bf6lSq56aSFpk0kIQNJCEDSQhA0kIQNdXCuc/DuHdhhtzM6/ZclauHPYH/mEhuUg
        x1ClWMq1vf3cp0keuUSUxQLg57RIabneTpbdRr0HCmxxFiTB53KZMIvbceF/SCVCoIsbdFa2r+XECWvk
        O3g7eoVNZ5cS5xkk38UECUJIVRrwmJu1rrsD5DdL+PmtOE4S+tiadBoyuqVYvcNGrnEzcBoLj0BXOo1C
        1wcNQQRPRex+FcfTjE1XUxVrvoGmGEuawMeCKpztIIJ7rRBmCVz6lumWxvRJbiuZw74eP+ofgqpgiq9p
        dEghrHPa8CdHANIvo4LgNEx1j3XtKHxPhjicHiXUzRdRY6lUYzM8Gm2k5tFwc4kkjNlMmYAXi6W3SFOn
        dV/V4n33z/TWuaZNnqOM/BNWjjBh2Pa+m4vLax7rGspGKzqhmGdnBzCeXMBYeL/DlVmLrYagypX7F0Es
        pucYgHMWtmBdaeP/ABPUfUxjaL3fhsTijULDbNyndoMNkDXKJ0Xe/wDLsM+tjO9kbWxtKsyo+i6rIpsy
        5DTa9paQe80yRM6arl8XVklu+3+e8N/D07bI8JSwNVzXubSe5tP/AHHBriKf9xAhvmnUwFZrWPdSqBtT
        /bcWODan9pIh3kvV0/iOg8Y3tnvyV69Wo2l2WVznOYQyoK1N47N2aM7SHNInUldHAfE9OnRwlTv1zQr0
        +0PZCmWUm0smU98tqPa7IWuAFmAOK1errn/PvDM6eny8VjeHYgVAypQqtqObLWGm9riADcMIkiAT5FQd
        wmuKgpOoVRUcARTNN4e4GYhhEmYO2y9g74qoMr4UipnbROJcXU6DqIaa1IsaGtdUc4nNBcZA0iblZeEf
        ElMUaFF76rXHh+Iw76jWl7qbqtftKbm3BeMvdIBBh5hPma8ce9/8/K/L0eXm3cLxAqNpmhVD3EhrOzfn
        dlJBysiTEHTkt9LgNcVHCg2qajPmZ2b+1ZyBZlmTeARdetPFKeF/CNe+o8P4PXpdpVpOzND8S5zXuoF2
        bsyKZaBmByEeC5nE/ihjmYkUnuJOFwlNj2UzSaewrOe4RmJa2CAMxkxCk6uvVxPecLenpnNee4y+pkpt
        ebZZy7g2md5uVyVqxWOdUADstnEyBBuqnVJiQIAA5EgeG69E2cKpTUqsSS0QOWseagqgTCSnT1nldBoL
        DnDSIIffzv8AzxWzhTHfmFhhzqZgnQCZn2jzVeAIfVLqhMCSXc+UqGMqQwN0zG/gOfifos3w056aSFpk
        0kIQNJCEDSTSQNJNJA0k0kFuHqwdbEQeUeHutbqJNGYMNrEf2lwFvYeqwLq4ek80cw0c+DfcAxI8fupV
        jm0jr4H2v9inSEnKTAJieXXwWp2EdHaZe6HQbgQeXVV4jCOY2THzZYkTpMxtZMmGao2Cd767FJNpVtPD
        ucQA0yXAdLqihbeGYttMkuaXd0gCYF+fRR4hw91F2V8SWyIuCNPssynMOGhpFR0fKS6x2Enc8ksTQNN5
        aSDB1GmgPmoZ5aG21Omu2+628JAmSwvIIDYuOZkdBdLsvLEwGo4kuAmSSbBUrdWqOrODYaO8coHdiToZ
        WZ2HcHFuUkgkEATp4IitdPBUKhoVSHgM1LZ5fuB9Fgdhng5S0za3jorBiHsa6loCe8CLzbfyCXcmzOnT
        qFpDmkhwIIIJBBFwQRcEc0gF1cDw1uXPWkNdTJbluQRuYFh/CluCRSyvXf2lV1Rzjlyve9xe4g2iXSSs
        v4lwaWgnKdRzhQe70CBbx26dUwZSqsLTDtdwq5QUKodN0EGJvpz6KVS5JAgE6cuirUmlBFXMZNv5fX2U
        qIbfMSCGy2NztKvFDKG5ogjNAO3KduaiuhQwYfmNPutAB7xv477g78ly+J12vqEsBDYAE9PovQV3Um0X
        OIyF9IhrSZi2g5f5XlVnTu1q2JNJNbYCSaSBpJpIBCaSAQmkgEJpIBa+H4ssMatcRmbsYMhZUko6OIdD
        i5ghpIIGsRe/Pn1VnEsc6t3jAcBEDlJ315qmg+RGsiPEzp4mZHUqzh9dlN+ZzM7ezIi1tDobSIjzBWLO
        7cYWucf1GOZJhGflrzOv+Fdi2ZiXN0kmBsDcW5R/NYz0tR4rURqx1RznEvJJBjvTMat18/RYyFc2sXGH
        GZEX9vf7oyCM0jWI0PjHJJsl3VRYeJ+ytpV3Nu0keH19JTdkyiCc0meUdFCmWgic0b6AxugrlbOGV8r5
        z5O4bxm8o/miyPABtpNvDZRTA7mFw9F7iX1Q78sGSXMIcdPSPdU8O4a2rVcx1TQE5tc3hdcpJT4b5XLq
        DiBp1Iy03BgLPlEOAkTOv/tZ3Y95zQ7KHSMoAAg7C1llbujRXETK1pLCCQJ1AI9yOSpcZM9U3vJuSSeq
        iqgQmp9kcodHdLonqgrTa0kwLkmB1SU6bi0hwMEGR0I0KDTUpmlmbUYQ8gZZ/TfXkf8ACGs7Ngc4d512
        g8h+o9J+ihi8W+q7PUMmIFgLDoNtVVVrOdGYkwIE7BSZ7rlBzidSkhNVCQhNAkJpIBCaSAQmkgEJpIBC
        aSAQmkg6XDMMC173ODWtjxzCC23K/ukK/fLqjM2aZiwdbURuFz1JjyNFMLlaCf07fL1E3b4jX16LVhMC
        6qHOYIytOYaXIOnv6KvBYwteHA3B0dcctVdi8RUzFxzNziYBc0OHKNCOnnus3PZqYcxzY1UqvPmPff8A
        nVXZhvob319RqfSVdh+HvqAimM0XsW22IMn+QrnymGBSnmkRFjzQtMpgSPp+yrU6VTKQRsd9PRXucxwk
        2cSZEd3y/ZFGEwFSoJYAe8GiXMbmcdGtzEZ3dGybjmFmAXe4ZUptbSc5winijUgAvLgeylo/pf8AlCJg
        HMbiL8jEEOcSLd4mDcCTsVmW2tWTCAeMpEXzC++9lUp5Y15eqgtMBCaSAVhMeR/ZRarqdPnz/niihtDu
        F0gXs3d3UdAqvH0XRwdAnNUEHsxJk6RcADcyPDx0WDEVC5zidS5SUqslJCaqEhCaBIQmgSE0kAhNJAIQ
        hAIQhAIQhAIQhAIQhALXTxBcAx5JDfl5tG8eV/KEIUqxJ1APfkpnNJ7p0kxPl/j1TatSg4hpLX6O0PWO
        XK6ELPfC9sshKSELbIW3h/FKlEODCIfGaQHaBzRroYe6/VCFLJZirLZw2/8Aklc5Zc3uVA4d1o7wtJgX
        PVTq8fxREEtgjXs6YJGTIe9lm4myaFj5enw1NerynWwoo02OmXPFyLtDSB+l0g+NlieyjlFodmN9BG3d
        MpoTTvC8oU+7MZTmaR+jTxI+6Dw8zDmxaZsNegJ+iELSND8LhmR+a7W/duPAevNUvqMyua1vdzfNMvMT
        9bWAQhBNlY0mAOYQ15BIJ1A0AMb81y6zgXEgQCbDkmhNPkqtCELTIQhCAQhCAQhCAQhCD//Z
</value>
  </data>
</root>